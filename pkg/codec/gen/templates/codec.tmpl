// Code generated by github.com/LiskHQ/lisk-engine/pkg/codec/gen; DO NOT EDIT.

package {{ .Name }}

import (
	{{ range $imp := .Imports -}}
	"{{$imp}}"
	{{ end }}
)

{{ range .Structs }}
func (e *{{ .Name }}) Encode() ([]byte, error){
	writer := codec.NewWriter()
	{{ range .Fields -}}
		{{ .EncodeLogic }}
	{{ end -}}
	return writer.Result(), nil
}

func (e *{{ .Name }}) MustEncode() []byte {
 	encoded, err := e.Encode()
	 if err != nil {
	 	panic(err)
	 }
	return encoded
}

func (e *{{ .Name }}) Decode(data []byte) error {
	reader := codec.NewReader(data)
	return e.DecodeFromReader(reader)
}

func (e *{{ .Name }}) MustDecode(data []byte) {
	if err := e.Decode(data); err != nil {
		panic(err)
	}
}

func (e *{{ .Name }}) DecodeStrict(data []byte) error {
	reader := codec.NewReader(data)
	if err := e.DecodeStrictFromReader(reader); err != nil {
		return err
	}
	if reader.HasUnreadBytes() {
		return codec.ErrUnreadBytes
	}
	return nil
}

func (e *{{ .Name }}) DecodeFromReader(reader *codec.Reader) error {
	{{ range .Fields -}}
		{{ .DecodeLogic }}
	{{ end -}}
	return nil
}

func (e *{{ .Name }}) DecodeStrictFromReader(reader *codec.Reader) error {
	{{ range .Fields -}}
		{{ .DecodeStrictLogic }}
	{{ end -}}
	return nil
}
{{ end }}